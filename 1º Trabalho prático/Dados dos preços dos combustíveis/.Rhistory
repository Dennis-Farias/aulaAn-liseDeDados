getwd()
cd ..
('Hello world')
('Hello world')
Ana = 8L
Paulo = 12L
ifelse(Ana>Paulo,'A menina é mais velha','O menino é mais velho')
Ana = 14L
Paulo = 12L
ifelse(Ana>Paulo,'A menina é mais velha','O menino é mais velho')
class(BDO)
class(BDO)
class(BDO)
class(BOD)
class(BOD)
vetor = c(1,2,3,4,5,6,7,8,9,10)
vetor = c(1,2,3,4,5,6,7,8,9,10)
for i in range(1, 10):
vetor = c(1,2,3,4,5,6,7,8,9,10)
for (i in 1: 10):
vetor = c(1,2,3,4,5,6,7,8,9,10)
for (i in 1: 10) {
if vetor[i] % 2 == 0:
vetor = c(1,2,3,4,5,6,7,8,9,10)
for (i in 1: 10) {
if (vetor[i] % 2 == 0) {
vetor = c(1,2,3,4,5,6,7,8,9,10)
for (i in 1: 10) {
if (vetor[i] %% 2 == 0) {
print(vetor[i])
}
}
if (vetor[i] %% 2 == 0) {
print(vetor[i])
}
vetor = c(1,2,3,4,5,6,7,8,9,10)
for (i in 1: 10) {
if (vetor[i] %% 2 == 0) {
print(vetor[i])
}
}
tail(women)
tail(women, n=10)
help(plot)
help(plot)
help(sd)
help(plot)
olor(Iris)
olor(iris)
plot(iris)
plot(iris$Sepal.Length, iris$Petal.Length)
help(plot)
plot(iris$Sepal.Length, iris$Petal.Length, nrows = 50)
iris_50_100 = iris[50:100,]
iris
iris = iris
View(iris)
View(iris_50_100)
iris_50_100 = iris[50:100,]
plot(iris_50_100$Sepal.Length, iris_50_100$Petal.Length)
View(iris_50_100)
iris_50_100 = iris[50:100,]
plot(iris$Sepal.Length, iris$Petal.Length)
iris_50_100 = iris[50:100,]
plot(iris_50_100$Sepal.Length, iris_50_100$Petal.Length)
vetor1 = c(1,2,3,4)
vetor2 = c(4,3,2,1)
soma = vetor1 + vetor2
soma
vetor1 = c(1,2,3,4)
vetor2 = c(4,3,2)
soma = vetor1 + vetor2
soma
vetor1 = c(5,7,2,9)
vetor2 = c(8,4,6,3)
soma = vetor1 + vetor2
soma
nrow(CO2)
CO2
nrow(CO2)
CO2
nrow(CO2)
ncol(CO2)
rownames(CO2)
colnames(CO2)
CO2
vetor = c(1,2,3,4,5,6,7,8,9,10)
for (i in 1:10) {
if (vetor[i] %% 2 == 0) {
print(vetor[i])
}
}
novairis = iris[50:100,c(2,3)]
plot(novairis)
iris_50_100 = iris[50:100,]
plot(iris_50_100$Sepal.Length, iris_50_100$Petal.Length)
iris
iris
iris_50_100 = iris[50:100,]
plot(iris_50_100$Sepal.Width, iris_50_100$Petal.Length)
iris
iris_50_100 = iris[50:100,]
plot(iris_50_100$Sepal.Width, iris_50_100$Petal.Length)
iris_50_100 = iris[50:100,]
plot(iris_50_100$Sepal.Width, iris_50_100$Petal.Length)
dim(CO2)[1]
dim(CO2)[2]
rownames(CO2)
colnames(CO2)
nrow(CO2)
ncol(CO2)
rownames(CO2)
colnames(CO2)
#buscamos novamente idades anormais
dados[dados$Idade<0 | dados$Idade>110 ,]
#importa dados, string vazio como NA, string como fatores
dados = read.csv("Tempo.csv", sep = ";", na.strings="", stringsAsFactors=T)
head(dados)
summary(dados)
head(dados)
#importa dados, string vazio como NA, string como fatores
dados = read.csv("Tempo.csv", sep = ";", na.strings="", stringsAsFactors=T)
View(dados)
#aparencia
counts = table(dados$Aparencia)
counts
barplot(counts, main="Aparencia", xlab="Aparencia")
#Gênero
counts = table(dados$Vento)
counts
barplot(counts, main="Vento", xlab="Vento")
#jogar
counts = table(dados$Jogar)
counts
barplot(counts, main="Jogar", xlab="Jogar")
#Temperatura
summary(dados$Temperatura)
boxplot(dados$Temperatura)
hist(dados$Temperatura)
summary(dados$Umidade)
boxplot(dados$Umidade)
hist(dados$Umidade)
summary(dados$Aparencia)
#não temos NAs
dados[is.na(dados$Aparencia),]
#opção, preencher com mediana
#subtituição com moda
dados[dados$Aparencia == 'menos' ,]$Aparencia = 'sol'
#buscamos novamente aparencias
summary(dados$Aparencia)
#remover levels não utilizados
dados$Aparencia =   factor(dados$Aparencia)
#visualizar novamente
summary(dados$Aparencia)
summary(dados$Temperatura)
#fora do dominio, numérico - ver idades anormais
dados[dados$Temperatura < -130 | dados$Temperatura > 130 ,]$Temperatura
#não temos NAs
dados[is.na(dados$Temperatura),]
#opção, preencher com mediana
median(dados$Temperatura)
#subtituição
dados[dados$Temperatura < -135 | dados$Temperatura > 130 ,]$Temperatura = median(dados$Temperatura)
#buscamos novamente temperaturas anormais
dados[dados$Temperatura< -135 | dados$Temperatura > 130 ,]$Temperatura
summary(dados$Temperatura)
summary(dados$Umidade)
#fora do dominio, numérico - ver idades anormais
dados[dados$Umidade < 0 | dados$Umidade > 100 ,]$Umidade
#Verifica NAs
dados[is.na(dados$Umidade),]
#atribuir mediana a NAs
dados[is.na(dados$Umidade),]$Umidade = median(dados$Umidade,na.rm = T)
#subtituição
dados[dados$Umidade < 0 | dados$Umidade > 100 ,]$Umidade = median(dados$Umidade)
#buscamos novamente idades anormais
dados[dados$Umidade < 0 | dados$Umidade > 100 ,]
summary(dados$Umidade)
summary(dados$Vento)
#Verifica NAs
dados[is.na(dados$Vento),]
#substitui
dados[is.na(dados$Vento),]$Vento = 'FALSO'
#Verifica NAs
dados[is.na(dados$Vento),]
summary(dados$Vento)
View(dados)
summary(dados$Aparencia)
summary(dados$Aparencia)
summary(dados$Temperatura)
#buscamos novamente idades anormais
dados[dados$Umidade < 0 | dados$Umidade > 100 ,]
summary(dados$Umidade)
summary(dados$Vento)
# b) Teste a variância
install.packages('EnvStats')
library(EnvStats)
varTest(v_leve, alternative = 't', conf.level = 0,95, sigma.squared = 340)
varTest(v_leve, alternative = 't', conf.level = 0.95, sigma.squared = 340)
v_leve = c(80, 79, 113, 115, 116, 119, 78, 76, 80, 116)
varTest(v_leve, alternative = 't', conf.level = 0.95, sigma.squared = 340)
varTest(v_leve, alternative = 't', conf.level = 0.95, sigma.squared = 340)
dados = read.csv('dados.csv', sep=";")
m3 = matrix(c(28,42,30,24,44,78,78,76),
nrow = 2,
ncol = 4, byrow = T)
colnames(m3) = c('BAIXO', 'MÉDIO', 'ALTO', 'MUITO ALTO')
rownames(m3) = c('Norte', 'Sul')
m3
# Teste de independência do qui-quadrado
chisq.test(m3)
teste = matrix(c(19,6,43,32),
nrow = 2,
ncol = , byrow = T)
teste
chisq.test(teste)
teste = matrix(c(41,34,18,7),
nrow = 2,
ncol = 2, byrow = T)
chisq.test(teste)
dados = read.csv("dados.csv", sep = ';')
# Análise dos preços dos combustíveis no Brasil por região
dados = read.csv('combustiveis-regioes.csv', sep = ',')
setwd("C:/Users/denni/OneDrive/Área de Trabalho/Faculdade/Informática de Gestão/aulaAnaliseDeDados/1º Trabalho prático/Dados dos preços dos combustíveis")
# Removendos valores NA
dados_final = dados[, -c(6,7,8,9,10,12,13,15,16,17,18,19,21,22,23,24,25)]
# Análise dos preços dos combustíveis no Brasil por região
dados = read.csv('combustiveis-regioes.csv', sep = ',')
# Removendos valores NA
dados_final = dados[, -c(6,7,8,9,10,12,13,15,16,17,18,19,21,22,23,24,25)]
# H0 - Não existe diferença significativa entre o preço da gasolina por região
# H1 - Existe diferença significativa entre o preço da gasolina por região
an = aov(gasolina_comum_preco_revenda_avg ~ regiao, data=dados_final)
summary(an)
# H0 - Não existe diferença significativa entre o preço da gasolina por região
# H1 - Existe diferença significativa entre o preço da gasolina por região
an = aov(oleo_diesel_preco_revenda_avg ~ regiao, data=dados_final)
summary(an)
# H0 - Não existe diferença significativa entre o preço da gasolina por região
# H1 - Existe diferença significativa entre o preço da gasolina por região
an = aov(gas_cozinha_glp_preco_revenda_avg ~ regiao, data=dados_final)
summary(an)
# H0 - Não existe diferença significativa entre o preço da gasolina por região
# H1 - Existe diferença significativa entre o preço da gasolina por região
an = aov(gasolina_comum_preco_revenda_avg ~ regiao, data=dados_final)
summary(an)
# Teste para ver se existe diferença no preço do etanol por região
# H0 - Não existe diferença significativa entre o preço do etanol por região
# H1 - Existe diferença significativa entre o preço do etanol por região
an = aov(etanol_hidratado_preco_revenda_avg ~ regiao, data=dados_final)
summary(an)
modelo = lm(gas_cozinha_glp_preco_revenda_avg ~ gasolina_comum_preco_revenda_avg, data = dados_final)
# O resultado é o preço do gás de cozinha quando a gasolina está valendo 1,2,3,4,5
predict(modelo, data.frame(gasolina_comum_preco_revenda_avg = c(1,2,3,4,5)))
# O resultado é o preço do gás de cozinha quando a gasolina está valendo 1,2,3,4,5,6
predict(modelo, data.frame(gasolina_comum_preco_revenda_avg = c(1,2,3,4,5,6)))
